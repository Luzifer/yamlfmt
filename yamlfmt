#!/usr/bin/env python

import argparse
import os
import sys
import tempfile

from ruamel import yaml

parser = argparse.ArgumentParser()
parser.add_argument('file', help='file to parse', nargs='*')
parser.add_argument('-w', '--write',
                    help='write formatted outpout to (source) file instead of stdout',
                    action='store_true')
args = parser.parse_args()


def round_trip(sout, sin):
    y = yaml.round_trip_load(sin)
    yaml.round_trip_dump(y, sout)


def make_temp_file(name):
    fd, outname = tempfile.mkstemp(prefix=name, suffix='.tmp')
    stat = os.stat(name)
    os.fchmod(fd, stat.st_mode)
    os.fchown(fd, stat.st_uid, stat.st_gid)
    os.close(fd)
    return outname


def main():
    if args.write and not args.file:
        parser.error('write requires at least one file')

    if not args.file:
        round_trip(sys.stdout, sys.stdin)
        return 0

    if not args.write:
        file_out = sys.stdout

    for file in args.file:
        if args.write:
            file_out_name = make_temp_file(file)
            file_out = open(file_out_name, 'w')
            file_out.write('---\n')

        with open(file, 'r') as sin:
            round_trip(file_out, sin)

        if args.write:
            file_out.write('\n...\n')
            file_out.close()
            os.rename(file_out_name, file)

    return 0


if __name__ == '__main__':
    sys.exit(main())
